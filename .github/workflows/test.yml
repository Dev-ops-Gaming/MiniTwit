name: Run tests and linter 

on:
    push:
    workflow_dispatch: 

jobs:
      #Calling reusable workflows
    call-hadolint:
        uses: Dev-ops-Gaming/MiniTwit/.github/workflows/docker-linter.yml@staging
  
    call-golangci:
        uses: Dev-ops-Gaming/MiniTwit/.github/workflows/golangci-lint.yml@staging
    
    run-tests:
        runs-on: ubuntu-latest
        needs: [call-hadolint, call-golangci]
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
              fetch-depth: 0
    
          - name: Set up Go
            uses: actions/setup-go@v4
            with:
              go-version: '1.22'  # Specify the Go version you're using
    
          - name: Set up Docker Compose
            run: |
              sudo apt-get update
              sudo apt-get install -y docker-compose
    
          - name: Find run_tests.sh script
            id: find_test_script
            run: |
              SCRIPT_PATH=$(find . -name "run_tests.sh" -type f | head -n 1)
              if [ -z "$SCRIPT_PATH" ]; then
                echo "Error: run_tests.sh script not found in the repository"
                exit 1
              fi
              echo "SCRIPT_PATH=${SCRIPT_PATH}" >> $GITHUB_OUTPUT
              echo "Found test script at: ${SCRIPT_PATH}"
    
          - name: Run Test Suite
            run: |
              cd $(dirname "${{ steps.find_test_script.outputs.SCRIPT_PATH }}")
              echo "Running tests from directory: $(pwd)"
              sudo chmod +x ./run_tests.sh
              # Run tests and capture output
              sudo ./run_tests.sh 
              # Explicitly check exit code and fail if non-zero
              if [ $? -ne 0 ]; then
                echo "Tests failed! Aborting deployment."
                exit 1
              fi