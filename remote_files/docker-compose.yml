services:

#running with current scaling setup resulted in 18 db connections (seen on digitalocean)
  app:
    build:
          context: ../
          dockerfile: docker/Dockerfile
    image: pbjh/minitwit-app:latest
    deploy:
      replicas: 3 #lets start with 3, see if we need more
      placement:
        constraints: [node.role != manager] #dont run services on manager-node
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 1 
        delay: 5s 
        order: stop-first 
    ports:
      - "8080:8080"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DBNAME=${DB_DBNAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - DB_TIMEZONE=${DB_TIMEZONE}
    networks:
      - minitwit-network

  api:
    build:
      context: ../
      dockerfile: docker/Dockerfile.api
    image: pbjh/minitwit-api:latest
    deploy:
      replicas: 4
      placement:
        constraints: [node.role != manager]
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
        monitor: 30s
      rollback_config:
        parallelism: 1 
        delay: 5s 
        order: stop-first
    ports:
      - "8081:8081"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DBNAME=${DB_DBNAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - DB_TIMEZONE=${DB_TIMEZONE}
    networks:
      - minitwit-network
  prometheus:
    image: prom/prometheus
    deploy:
      mode: global # run on all nodes
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - LOG_LEVEL=warn
    networks:
      - minitwit-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_LOG_LEVEL=warn
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - minitwit-network
    deploy:
      placement:
        constraints:
          - node.hostname == main # only host grafana on main node

  setup:
    profiles:
      - setup
    build:
      context: ../../setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ../../setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ../../setup/lib.sh:/lib.sh:ro,Z
      - ../../setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: ../../elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ../../elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    build:
      context: ../../logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ../../logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ../../logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    extends:
      file: ../../filebeat/filebeat-compose.yml
      service: filebeat

  kibana:
    build:
      context: ../../kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ../../kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

networks:
  minitwit-network:
    driver: overlay
  elk:
    driver: bridge
  main:


volumes:
  grafana-storage:
  elasticsearch:
