services:
  app:
    #container_name: minitwit-app
    build:
          context: ../
          dockerfile: docker/Dockerfile
    image: pbjh/minitwit-app:latest
    deploy:
      replicas: 3 #lets start with 3, see if we need more
      placement:
        constraints: [node.role != manager] #dont run services on manager-node
    ports:
      - "8080-8082:8080"
      #- "8080:8080"
    environment:
      - DB_USER
      - DB_PASSWORD
      - DB_HOST
      - DB_PORT
      - DB_DBNAME
      - DB_SSLMODE
      - DB_TIMEZONE
  api:
    #container_name: minitwit-api
    build:
      context: ../
      dockerfile: docker/Dockerfile.api
    image: pbjh/minitwit-api:latest
    deploy:
      replicas: 5
      placement:
        constraints: [node.role != manager]
    ports:
      - "8083-8088:8081"
      #- "8081:8081"
    environment:
      - DB_USER
      - DB_PASSWORD
      - DB_HOST
      - DB_PORT
      - DB_DBNAME
      - DB_SSLMODE
      - DB_TIMEZONE

  prometheus:
    #container_name: minitwit-prometheus
    image: prom/prometheus
    deploy:
      mode: global #make monitoring container global
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - LOG_LEVEL=warn

# Guessing we wont need to scale grafana?
  grafana:
    container_name: minitwit-grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_LOG_LEVEL=warn
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:
