services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=testpassword
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DBNAME=testdb
      - DB_SSLMODE=disable
      - DB_TIMEZONE=Europe/Copenhagen
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - minitwit-network

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    ports:
      - "8081:8081"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=testpassword
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DBNAME=testdb
      - DB_SSLMODE=disable
      - DB_TIMEZONE=Europe/Copenhagen
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - minitwit-network

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "testpassword"
      POSTGRES_DB: "testdb"
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - minitwit-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - local_prometheus-storage:/var/lib/prometheus
    networks:
      - minitwit-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - local_grafana-storage:/var/lib/grafana
    networks:
      - minitwit-network

  
  setup:
    profiles:
      - setup
    build:
      context: ./setup/ # Adjusted path
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.13.0}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: ./elasticsearch/ # Adjusted path
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.13.0}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    build:
      context: ./logstash/ # Adjusted path
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.13.0} # Provide a default or set in .env
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    extends:
      file: ./filebeat/filebeat-compose.yml # Adjusted path
      service: filebeat
    networks:
      - elk
      - minitwit-network
    depends_on:
      - logstash
      - elasticsearch

  kibana:
    build:
      context: ./kibana/ # Adjusted path
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.13.0}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

networks:
  minitwit-network:
    driver: bridge
  elk:
    driver: bridge

volumes:
  local_pgdata:
  local_grafana-storage:
  local_prometheus-storage:
  elasticsearch:
